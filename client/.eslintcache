[{"/home/val/repos/nojest/client/src/index.js":"1","/home/val/repos/nojest/client/src/App.js":"2","/home/val/repos/nojest/client/src/reportWebVitals.js":"3","/home/val/repos/nojest/client/src/pages/login.jsx":"4","/home/val/repos/nojest/client/src/palette.js":"5","/home/val/repos/nojest/client/src/pages/profile.jsx":"6","/home/val/repos/nojest/client/src/pages/createOrder.jsx":"7","/home/val/repos/nojest/client/src/pages/registration.jsx":"8","/home/val/repos/nojest/client/src/pages/profileActivation.jsx":"9","/home/val/repos/nojest/client/src/services/backendService.js":"10"},{"size":500,"mtime":1608027404563,"results":"11","hashOfConfig":"12"},{"size":1795,"mtime":1608819453365,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608027404567,"results":"14","hashOfConfig":"12"},{"size":2826,"mtime":1608722279456,"results":"15","hashOfConfig":"12"},{"size":237,"mtime":1608154054697,"results":"16","hashOfConfig":"12"},{"size":7707,"mtime":1608231539028,"results":"17","hashOfConfig":"12"},{"size":5239,"mtime":1608469897344,"results":"18","hashOfConfig":"12"},{"size":3207,"mtime":1608820972367,"results":"19","hashOfConfig":"12"},{"size":1452,"mtime":1608821125213,"results":"20","hashOfConfig":"12"},{"size":526,"mtime":1608822431418,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1kwuswn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/val/repos/nojest/client/src/index.js",[],["45","46"],"/home/val/repos/nojest/client/src/App.js",[],"/home/val/repos/nojest/client/src/reportWebVitals.js",[],"/home/val/repos/nojest/client/src/pages/login.jsx",[],"/home/val/repos/nojest/client/src/palette.js",[],"/home/val/repos/nojest/client/src/pages/profile.jsx",[],"/home/val/repos/nojest/client/src/pages/createOrder.jsx",["47","48","49","50","51"],"\nimport React, { useState, useEffect } from 'react';\nimport {\n  Paper,\n  Button,\n  TextField,\n  Box,\n  Avatar,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  Typography,\n} from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport WorkIcon from '@material-ui/icons/Work';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    margin: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  paper: {\n    width: theme.spacing(120),\n    padding: theme.spacing(8),\n  },\n  avatar: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n  },\n  ratingBox: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  textField: {\n    marginBottom: theme.spacing(4),\n  },\n  form: {\n    paddingTop: theme.spacing(5),\n  },\n  formRow: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(4),\n  },\n  formRowButtons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  formCellHalf: {\n    width: '47%',\n  },\n  formControlSelect: {\n    width: '47%',\n  },\n  datePicker: {\n    width: '47%',\n  },\n  saveButton: {\n    marginTop: theme.spacing(4),\n  },\n  chipsBox: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nconst CreateOrderPage = props => {\n\n  const classes = useStyles();\n\n  const [formState, setFormState] = useState({ values: {\n    title: '',\n    description: '',\n    platform: 'web',\n    language: 'RU'\n  } });\n\n  useEffect(() => {\n    setFormState(formState => ({\n      ...formState\n    }));\n  }, [formState.values]);\n\n\n  return (\n    <Box className={classes.root}>\n      <Paper square className={classes.paper}>\n        <Typography variant=\"h3\">\n          New order\n        </Typography>\n        <form\n          className={classes.form}\n        >\n          <TextField\n            className={classes.textField}\n            fullWidth\n            label=\"Title\"\n            name=\"title\"\n            type=\"text\"\n            value={formState.values.title || ''}\n          />\n          <TextField\n            className={classes.textField}\n            fullWidth\n            label=\"Description\"\n            name=\"description\"\n            multiline\n            type=\"text\"\n            value={formState.values.description || ''}\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Box className={classes.formRow}>\n              <Box className={classes.formCellHalf}>\n                <TextField\n                  className={classes.textFieldInRow}\n                  fullWidth\n                  label=\"Expected price\"\n                  name=\"expectedPrice\"\n                  multiline\n                  type=\"text\"\n                  value={formState.values.expectedPrice || ''}\n                />\n              </Box>\n              <KeyboardDatePicker\n                className={classes.datePicker}\n                label=\"Timelimit\"\n                format=\"dd.MM.yyyy\"\n                value={formState.values.timelimit}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Box>\n          </MuiPickersUtilsProvider>\n          <Box className={classes.formRow}>\n            <FormControl className={classes.formControlSelect}>\n              <InputLabel id=\"language-select-label\">Target language</InputLabel>\n              <Select\n                labelId=\"language-select-label\"\n                id=\"language-select\"\n                className={classes.select}\n                value={formState.values.language}\n              >\n                <MenuItem value={'RU'}>Russian</MenuItem>\n                <MenuItem value={'EN'}>English</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControlSelect}>\n              <InputLabel id=\"platform-select-label\">Target platform</InputLabel>\n              <Select\n                labelId=\"platform-select-label\"\n                id=\"platform-select\"\n                className={classes.select}\n                value={formState.values.platform}\n              >\n                <MenuItem value={'ios'}>IOS</MenuItem>\n                <MenuItem value={'android'}>Android</MenuItem>\n                <MenuItem value={'tv'}>TV</MenuItem>\n                <MenuItem value={'mac'}>Mac</MenuItem>\n                <MenuItem value={'pc'}>PC</MenuItem>\n                <MenuItem value={'web'}>Web</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n          <Box className={classes.formRowButtons}>\n            <Button\n              className={classes.saveButton}\n              color=\"primary\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Create order\n            </Button>\n          </Box>\n        </form>\n      </Paper>\n    </Box>\n  );\n\n};\n\nexport default CreateOrderPage;\n","/home/val/repos/nojest/client/src/pages/registration.jsx",[],"/home/val/repos/nojest/client/src/pages/profileActivation.jsx",["52"],"\nimport React, { useEffect } from 'react';\nimport {\n  Paper,\n  Box,\n  Typography,\n  Link,\n} from '@material-ui/core';\nimport { useParams } from \"react-router-dom\";\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/styles';\nimport { backendService as backend } from '../services/backendService';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    margin: 'auto',\n    width: theme.spacing(80),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    paddingBottom: theme.spacing(2),\n    textAlign: 'center',\n  },\n  paper: {\n    padding: theme.spacing(4, 8),\n  },\n  alert: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nconst ProfileActivationPage = props => {\n\n  const classes = useStyles();\n  let { token } = useParams();\n\n  console.log('token: ', token);\n\n  useEffect(() => {\n    backend.activation(token).then(\n      resp => {\n        console.log(resp);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  });\n\n\n  return (\n    <Box className={classes.root}>\n\n      <Paper square className={classes.paper}>\n\n          <Typography variant=\"h4\" className={classes.title}>\n            Your email is confirmed!\n          </Typography>\n          <Link href=\"/login\" variant=\"body2\">\n            Sign in here\n          </Link>\n        \n      </Paper>\n    </Box>\n  );\n\n};\n\nexport default ProfileActivationPage;\n","/home/val/repos/nojest/client/src/services/backendService.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":8,"column":3,"nodeType":"59","messageId":"60","endLine":8,"endColumn":9},{"ruleId":"57","severity":1,"message":"61","line":13,"column":3,"nodeType":"59","messageId":"60","endLine":13,"endColumn":7},{"ruleId":"57","severity":1,"message":"62","line":16,"column":8,"nodeType":"59","messageId":"60","endLine":16,"endColumn":20},{"ruleId":"57","severity":1,"message":"63","line":17,"column":8,"nodeType":"59","messageId":"60","endLine":17,"endColumn":16},{"ruleId":"57","severity":1,"message":"64","line":23,"column":8,"nodeType":"59","messageId":"60","endLine":23,"endColumn":14},{"ruleId":"57","severity":1,"message":"65","line":10,"column":8,"nodeType":"59","messageId":"60","endLine":10,"endColumn":13},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'Chip' is defined but never used.","'LanguageIcon' is defined but never used.","'WorkIcon' is defined but never used.","'Rating' is defined but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]